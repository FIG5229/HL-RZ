<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.integration.generator.dao.IomCiRelMapper">
  <resultMap id="BaseResultMap" type="com.integration.generator.entity.IomCiRel">
    <id column="ID" jdbcType="DECIMAL" property="id" />
    <result column="LINE_BM" jdbcType="VARCHAR" property="lineBm" />
    <result column="LINE_NAME" jdbcType="VARCHAR" property="lineName" />
    <result column="LINE_STD_BM" jdbcType="VARCHAR" property="lineStdBm" />
    <result column="LINE_DESC" jdbcType="VARCHAR" property="lineDesc" />
    <result column="PARENT_LINE_ID" jdbcType="DECIMAL" property="parentLineId" />
    <result column="LINE_LVL" jdbcType="INTEGER" property="lineLvl" />
    <result column="LINE_PATH" jdbcType="VARCHAR" property="linePath" />
    <result column="SORT" jdbcType="INTEGER" property="sort" />
    <result column="LINE_COST" jdbcType="INTEGER" property="lineCost" />
    <result column="LINE_STYLE" jdbcType="INTEGER" property="lineStyle" />
    <result column="LINE_WIDTH" jdbcType="INTEGER" property="lineWidth" />
    <result column="LINE_COLOR" jdbcType="VARCHAR" property="lineColor" />
    <result column="LINE_ARROR" jdbcType="INTEGER" property="lineArror" />
    <result column="LINE_ANIME" jdbcType="INTEGER" property="lineAnime" />
    <result column="CJR_ID" jdbcType="BIGINT" property="cjrId" />
    <result column="CJSJ" jdbcType="TIMESTAMP" property="cjsj" />
    <result column="XGR_ID" jdbcType="BIGINT" property="xgrId" />
    <result column="XGSJ" jdbcType="TIMESTAMP" property="xgsj" />
    <result column="YXBZ" jdbcType="INTEGER" property="yxbz" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    ID, LINE_BM, LINE_NAME, LINE_STD_BM, LINE_DESC, PARENT_LINE_ID, LINE_LVL, LINE_PATH, 
    SORT, LINE_COST, LINE_STYLE, LINE_WIDTH, LINE_COLOR, LINE_ARROR, LINE_ANIME, CJR_ID, 
    CJSJ, XGR_ID, XGSJ, YXBZ
  </sql>
  <select id="selectByExample" parameterType="com.integration.generator.entity.IomCiRelExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from iom_ci_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from iom_ci_rel
    where ID = #{id,jdbcType=DECIMAL}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from iom_ci_rel
    where ID = #{id,jdbcType=DECIMAL}
  </delete>
  <delete id="deleteByExample" parameterType="com.integration.generator.entity.IomCiRelExample">
    delete from iom_ci_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.integration.generator.entity.IomCiRel">
    insert into iom_ci_rel (ID, LINE_BM, LINE_NAME, 
      LINE_STD_BM, LINE_DESC, PARENT_LINE_ID, 
      LINE_LVL, LINE_PATH, SORT, 
      LINE_COST, LINE_STYLE, LINE_WIDTH, 
      LINE_COLOR, LINE_ARROR, LINE_ANIME, 
      CJR_ID, CJSJ, XGR_ID, 
      XGSJ, YXBZ)
    values (#{id,jdbcType=DECIMAL}, #{lineBm,jdbcType=VARCHAR}, #{lineName,jdbcType=VARCHAR}, 
      #{lineStdBm,jdbcType=VARCHAR}, #{lineDesc,jdbcType=VARCHAR}, #{parentLineId,jdbcType=DECIMAL}, 
      #{lineLvl,jdbcType=INTEGER}, #{linePath,jdbcType=VARCHAR}, #{sort,jdbcType=INTEGER}, 
      #{lineCost,jdbcType=INTEGER}, #{lineStyle,jdbcType=INTEGER}, #{lineWidth,jdbcType=INTEGER}, 
      #{lineColor,jdbcType=VARCHAR}, #{lineArror,jdbcType=INTEGER}, #{lineAnime,jdbcType=INTEGER}, 
      #{cjrId,jdbcType=BIGINT}, #{cjsj,jdbcType=TIMESTAMP}, #{xgrId,jdbcType=BIGINT}, 
      #{xgsj,jdbcType=TIMESTAMP}, #{yxbz,jdbcType=INTEGER})
  </insert>
  <insert id="insertSelective" parameterType="com.integration.generator.entity.IomCiRel">
    insert into iom_ci_rel
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        ID,
      </if>
      <if test="lineBm != null">
        LINE_BM,
      </if>
      <if test="lineName != null">
        LINE_NAME,
      </if>
      <if test="lineStdBm != null">
        LINE_STD_BM,
      </if>
      <if test="lineDesc != null">
        LINE_DESC,
      </if>
      <if test="parentLineId != null">
        PARENT_LINE_ID,
      </if>
      <if test="lineLvl != null">
        LINE_LVL,
      </if>
      <if test="linePath != null">
        LINE_PATH,
      </if>
      <if test="sort != null">
        SORT,
      </if>
      <if test="lineCost != null">
        LINE_COST,
      </if>
      <if test="lineStyle != null">
        LINE_STYLE,
      </if>
      <if test="lineWidth != null">
        LINE_WIDTH,
      </if>
      <if test="lineColor != null">
        LINE_COLOR,
      </if>
      <if test="lineArror != null">
        LINE_ARROR,
      </if>
      <if test="lineAnime != null">
        LINE_ANIME,
      </if>
      <if test="cjrId != null">
        CJR_ID,
      </if>
      <if test="cjsj != null">
        CJSJ,
      </if>
      <if test="xgrId != null">
        XGR_ID,
      </if>
      <if test="xgsj != null">
        XGSJ,
      </if>
      <if test="yxbz != null">
        YXBZ,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=DECIMAL},
      </if>
      <if test="lineBm != null">
        #{lineBm,jdbcType=VARCHAR},
      </if>
      <if test="lineName != null">
        #{lineName,jdbcType=VARCHAR},
      </if>
      <if test="lineStdBm != null">
        #{lineStdBm,jdbcType=VARCHAR},
      </if>
      <if test="lineDesc != null">
        #{lineDesc,jdbcType=VARCHAR},
      </if>
      <if test="parentLineId != null">
        #{parentLineId,jdbcType=DECIMAL},
      </if>
      <if test="lineLvl != null">
        #{lineLvl,jdbcType=INTEGER},
      </if>
      <if test="linePath != null">
        #{linePath,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
      <if test="lineCost != null">
        #{lineCost,jdbcType=INTEGER},
      </if>
      <if test="lineStyle != null">
        #{lineStyle,jdbcType=INTEGER},
      </if>
      <if test="lineWidth != null">
        #{lineWidth,jdbcType=INTEGER},
      </if>
      <if test="lineColor != null">
        #{lineColor,jdbcType=VARCHAR},
      </if>
      <if test="lineArror != null">
        #{lineArror,jdbcType=INTEGER},
      </if>
      <if test="lineAnime != null">
        #{lineAnime,jdbcType=INTEGER},
      </if>
      <if test="cjrId != null">
        #{cjrId,jdbcType=BIGINT},
      </if>
      <if test="cjsj != null">
        #{cjsj,jdbcType=TIMESTAMP},
      </if>
      <if test="xgrId != null">
        #{xgrId,jdbcType=BIGINT},
      </if>
      <if test="xgsj != null">
        #{xgsj,jdbcType=TIMESTAMP},
      </if>
      <if test="yxbz != null">
        #{yxbz,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.integration.generator.entity.IomCiRelExample" resultType="java.lang.Long">
    select count(*) from iom_ci_rel
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update iom_ci_rel
    <set>
      <if test="record.id != null">
        ID = #{record.id,jdbcType=DECIMAL},
      </if>
      <if test="record.lineBm != null">
        LINE_BM = #{record.lineBm,jdbcType=VARCHAR},
      </if>
      <if test="record.lineName != null">
        LINE_NAME = #{record.lineName,jdbcType=VARCHAR},
      </if>
      <if test="record.lineStdBm != null">
        LINE_STD_BM = #{record.lineStdBm,jdbcType=VARCHAR},
      </if>
      <if test="record.lineDesc != null">
        LINE_DESC = #{record.lineDesc,jdbcType=VARCHAR},
      </if>
      <if test="record.parentLineId != null">
        PARENT_LINE_ID = #{record.parentLineId,jdbcType=DECIMAL},
      </if>
      <if test="record.lineLvl != null">
        LINE_LVL = #{record.lineLvl,jdbcType=INTEGER},
      </if>
      <if test="record.linePath != null">
        LINE_PATH = #{record.linePath,jdbcType=VARCHAR},
      </if>
      <if test="record.sort != null">
        SORT = #{record.sort,jdbcType=INTEGER},
      </if>
      <if test="record.lineCost != null">
        LINE_COST = #{record.lineCost,jdbcType=INTEGER},
      </if>
      <if test="record.lineStyle != null">
        LINE_STYLE = #{record.lineStyle,jdbcType=INTEGER},
      </if>
      <if test="record.lineWidth != null">
        LINE_WIDTH = #{record.lineWidth,jdbcType=INTEGER},
      </if>
      <if test="record.lineColor != null">
        LINE_COLOR = #{record.lineColor,jdbcType=VARCHAR},
      </if>
      <if test="record.lineArror != null">
        LINE_ARROR = #{record.lineArror,jdbcType=INTEGER},
      </if>
      <if test="record.lineAnime != null">
        LINE_ANIME = #{record.lineAnime,jdbcType=INTEGER},
      </if>
      <if test="record.cjrId != null">
        CJR_ID = #{record.cjrId,jdbcType=BIGINT},
      </if>
      <if test="record.cjsj != null">
        CJSJ = #{record.cjsj,jdbcType=TIMESTAMP},
      </if>
      <if test="record.xgrId != null">
        XGR_ID = #{record.xgrId,jdbcType=BIGINT},
      </if>
      <if test="record.xgsj != null">
        XGSJ = #{record.xgsj,jdbcType=TIMESTAMP},
      </if>
      <if test="record.yxbz != null">
        YXBZ = #{record.yxbz,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update iom_ci_rel
    set ID = #{record.id,jdbcType=DECIMAL},
      LINE_BM = #{record.lineBm,jdbcType=VARCHAR},
      LINE_NAME = #{record.lineName,jdbcType=VARCHAR},
      LINE_STD_BM = #{record.lineStdBm,jdbcType=VARCHAR},
      LINE_DESC = #{record.lineDesc,jdbcType=VARCHAR},
      PARENT_LINE_ID = #{record.parentLineId,jdbcType=DECIMAL},
      LINE_LVL = #{record.lineLvl,jdbcType=INTEGER},
      LINE_PATH = #{record.linePath,jdbcType=VARCHAR},
      SORT = #{record.sort,jdbcType=INTEGER},
      LINE_COST = #{record.lineCost,jdbcType=INTEGER},
      LINE_STYLE = #{record.lineStyle,jdbcType=INTEGER},
      LINE_WIDTH = #{record.lineWidth,jdbcType=INTEGER},
      LINE_COLOR = #{record.lineColor,jdbcType=VARCHAR},
      LINE_ARROR = #{record.lineArror,jdbcType=INTEGER},
      LINE_ANIME = #{record.lineAnime,jdbcType=INTEGER},
      CJR_ID = #{record.cjrId,jdbcType=BIGINT},
      CJSJ = #{record.cjsj,jdbcType=TIMESTAMP},
      XGR_ID = #{record.xgrId,jdbcType=BIGINT},
      XGSJ = #{record.xgsj,jdbcType=TIMESTAMP},
      YXBZ = #{record.yxbz,jdbcType=INTEGER}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.integration.generator.entity.IomCiRel">
    update iom_ci_rel
    <set>
      <if test="lineBm != null">
        LINE_BM = #{lineBm,jdbcType=VARCHAR},
      </if>
      <if test="lineName != null">
        LINE_NAME = #{lineName,jdbcType=VARCHAR},
      </if>
      <if test="lineStdBm != null">
        LINE_STD_BM = #{lineStdBm,jdbcType=VARCHAR},
      </if>
      <if test="lineDesc != null">
        LINE_DESC = #{lineDesc,jdbcType=VARCHAR},
      </if>
      <if test="parentLineId != null">
        PARENT_LINE_ID = #{parentLineId,jdbcType=DECIMAL},
      </if>
      <if test="lineLvl != null">
        LINE_LVL = #{lineLvl,jdbcType=INTEGER},
      </if>
      <if test="linePath != null">
        LINE_PATH = #{linePath,jdbcType=VARCHAR},
      </if>
      <if test="sort != null">
        SORT = #{sort,jdbcType=INTEGER},
      </if>
      <if test="lineCost != null">
        LINE_COST = #{lineCost,jdbcType=INTEGER},
      </if>
      <if test="lineStyle != null">
        LINE_STYLE = #{lineStyle,jdbcType=INTEGER},
      </if>
      <if test="lineWidth != null">
        LINE_WIDTH = #{lineWidth,jdbcType=INTEGER},
      </if>
      <if test="lineColor != null">
        LINE_COLOR = #{lineColor,jdbcType=VARCHAR},
      </if>
      <if test="lineArror != null">
        LINE_ARROR = #{lineArror,jdbcType=INTEGER},
      </if>
      <if test="lineAnime != null">
        LINE_ANIME = #{lineAnime,jdbcType=INTEGER},
      </if>
      <if test="cjrId != null">
        CJR_ID = #{cjrId,jdbcType=BIGINT},
      </if>
      <if test="cjsj != null">
        CJSJ = #{cjsj,jdbcType=TIMESTAMP},
      </if>
      <if test="xgrId != null">
        XGR_ID = #{xgrId,jdbcType=BIGINT},
      </if>
      <if test="xgsj != null">
        XGSJ = #{xgsj,jdbcType=TIMESTAMP},
      </if>
      <if test="yxbz != null">
        YXBZ = #{yxbz,jdbcType=INTEGER},
      </if>
    </set>
    where ID = #{id,jdbcType=DECIMAL}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.integration.generator.entity.IomCiRel">
    update iom_ci_rel
    set LINE_BM = #{lineBm,jdbcType=VARCHAR},
      LINE_NAME = #{lineName,jdbcType=VARCHAR},
      LINE_STD_BM = #{lineStdBm,jdbcType=VARCHAR},
      LINE_DESC = #{lineDesc,jdbcType=VARCHAR},
      PARENT_LINE_ID = #{parentLineId,jdbcType=DECIMAL},
      LINE_LVL = #{lineLvl,jdbcType=INTEGER},
      LINE_PATH = #{linePath,jdbcType=VARCHAR},
      SORT = #{sort,jdbcType=INTEGER},
      LINE_COST = #{lineCost,jdbcType=INTEGER},
      LINE_STYLE = #{lineStyle,jdbcType=INTEGER},
      LINE_WIDTH = #{lineWidth,jdbcType=INTEGER},
      LINE_COLOR = #{lineColor,jdbcType=VARCHAR},
      LINE_ARROR = #{lineArror,jdbcType=INTEGER},
      LINE_ANIME = #{lineAnime,jdbcType=INTEGER},
      CJR_ID = #{cjrId,jdbcType=BIGINT},
      CJSJ = #{cjsj,jdbcType=TIMESTAMP},
      XGR_ID = #{xgrId,jdbcType=BIGINT},
      XGSJ = #{xgsj,jdbcType=TIMESTAMP},
      YXBZ = #{yxbz,jdbcType=INTEGER}
    where ID = #{id,jdbcType=DECIMAL}
  </update>
</mapper>